server:
  port: 8090

spring:
  application:
    name: test
  #autoconfigure:
  #  exclude: org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration
  h2.console.enabled: true
  jpa:
    generate-ddl: true
    show-sql: true 
    database: default
    properties:
      hibernate: 
        jdbc.lob.non_contextual_creation: true
        temp.use_jdbc_metadata_defaults: false
        generate_statistics: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    database-platform: org.hibernate.dialect.PostgreSQL95Dialect
    hibernate:
      ddl-auto: create-drop
      ## Hibernate ddl auto (create, create-drop, validate, update)
  #data:
    #mongodb:
    #  host: mongoservice
    #  port: 27017
    #  username: admin 
    #  password: admin123
    #  database: microservices
    #  uri: mongodb://admin:admin123@mongoservice:27017
    #  url: mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongoservice:27017/${MONGODB_DB}
    #  #uri: mongodb://34.228.190.228:27017 # Mongo database URI. Cannot be set with host, port and credentials. 
  #datasource:
    #host: mongoservice
    #port: 27017
    #username: admin 
    #password: admin123
    #uri: mongodb://admin:admin123:27017@mongoservice
    #url: mongodb://admin:admin123:27017@mongoservice/microservices
  #cloud:
  #  kubernetes:
  #    secrets:
  #      enabled: true
  #      paths: /etc/mongo/config

# PostgreSQL DB - "postgres"
postgres:
  datasource:
    url: jdbc:postgresql://postgres:${POSTGRES_SERVICE_PORT}/${POSTGRES_DB}?currentSchema=public 
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver

# PostgreSQL DB - "postgres2"
postgres2:
  datasource:
    url: jdbc:postgresql://postgres2:${POSTGRES2_PORT}/${POSTGRES2_DB}?currentSchema=public 
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver

eureka:
  instance:
    hostname: eureka
    port: 8061
    leaseRenewalIntervalInSeconds: 10
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/
      #defaultZone: ${EUREKA_URI}


logging:
  pattern: 
    console: "%d{yyyy-MM-dd HH:mm:ss} ${LOG_LEVEL_PATTERN:-%5p} %m%n"
  level:
    org:
      hibernate:
        SQL: DEBUG
        type: TRACE
        stat: true

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# Because detection is disabled you have to set correct dialect by hand.
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

